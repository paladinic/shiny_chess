shiny::runGitHub(repo = "shiny_chess",username = "paladinic")
shiny::runGitHub(repo = "https://github.com/paladinic/shiny_chess",username = "paladinic")
shiny::runGitHub(repo = "https://github.com/paladinic/shiny_chess")
shiny::runGitHub(repo = "paladinic/shiny_chess")
shiny::runGitHub(repo = "paladinic/shiny_chess")
shiny::runGitHub(repo = "paladinic/shiny_chess")
shiny::runGitHub(repo = "paladinic/shiny_chess")
shiny::runGitHub(repo = "shiny_chess")
shiny::runGitHub(repo = "shiny_chess",username = "paladinic")
shiny::runGitHub(repo = "shiny_chess",username = "paladinic")
shiny::runGitHub(repo = "shiny_chess",username = "paladinic")
shiny::runUrl(url = "https://github.com/paladinic/shiny_chess")
shiny::runUrl(url = "https://github.com/paladinic/shiny_chess/app.R")
shiny::runUrl(url = "https://raw.githubusercontent.com/paladinic/shiny_chess/main/app.R")
repo = "shiny_chess",username = "paladinic"
shiny::runUrl(repo = "shiny_chess",username = "paladinic")
shiny::runGitHub(repo = "shiny_chess",username = "paladinic")
shiny::runGitHub(repo = "shiny_chess",
username = "paladinic")
shiny::runGitHub(repo = "shiny_gtrends",
username = "paladinic")
shiny::runGitHub(repo = "shiny_chess",
username = "paladinic")
shiny::runGitHub(repo = "shiny_chess",
username = "paladinic")
shiny::runGitHub(repo = "test",
username = "paladinic")
shiny::runGitHub(repo = "test",
username = "paladinic")
shiny::runGitHub(repo = "shiny_template",username = "paladinic")
shiny::runGitHub(repo = "test",username = "paladinic")
shiny::runGitHub(repo = "test",username = "paladinic")
shiny::runGitHub(repo = "test",username = "paladinic",ref="main")
shiny::runGitHub(repo = "test",
username = "paladinic")
shiny::runGitHub(repo = "test",
username = "paladinic",ref = "main")
shiny::runGitHub(repo = "shiny_chess",
username = "paladinic",ref = "main")
rsconnect::deployApp(appDir = "c:/Users/44751/Desktop/shiny_chess/www/shinyapps.io/shiny_chess")
shiny::shinyApp(ui = "c:/Users/44751/Desktop/shiny_chess/www/shinyapps.io/shiny_chess/ui.R",
server = "c:/Users/44751/Desktop/shiny_chess/www/shinyapps.io/shiny_chess/ui.R")
shiny::shinyApp(ui = "c:/Users/44751/Desktop/shiny_chess/www/shinyapps.io/shiny_chess/ui.R",
server = "c:/Users/44751/Desktop/shiny_chess/www/shinyapps.io/shiny_chess/ui.R")
shiny::shinyApp(ui = "c:/Users/44751/Desktop/shiny_chess/www/shinyapps.io/shiny_chess/ui.R",
server = "c:/Users/44751/Desktop/shiny_chess/www/shinyapps.io/shiny_chess/server.R")
runApp('C:/Users/44751/Desktop/shiny_chess')
rsconnect::deployApp(appDir = "c:/Users/44751/Desktop/shiny_chess")
dataf <- as_tibble( matrix(rnorm(12,0,1),nrow=4,ncol=3))
dataf <- tibble::( matrix(rnorm(12,0,1),nrow=4,ncol=3))
dataf <- tibble::as.tibble( matrix(rnorm(12,0,1),nrow=4,ncol=3))
dataf
dataf <- dataf %>% mutate(A = matrix(rnorm(8,0,1),nrow=4,ncol=2))
library(dplyr)
library(tibble)
dataf <- tibble::as.tibble( matrix(rnorm(12,0,1),nrow=4,ncol=3))
dataf <- dataf %>% mutate(A = matrix(rnorm(8,0,1),nrow=4,ncol=2))
dataf %>% select(A)
df_0 = dataf %>% select(A)
df_0
df_0[1]
df_0[1,1]
df_0[1,2]
df_0$A
df_0$A[1]
df_0$A[8]
df_0 %>% as.data.frame()
dataf <- as.tibble( matrix(rnorm(12,0,1),nrow=4,ncol=3))
dataf <- dataf %>% mutate(A = matrix(rnorm(8,0,1),nrow=4,ncol=2) %>% as.data.frame())
df_0 = dataf %>% select(A)
df_0
dataf <- as.tibble( matrix(rnorm(12,0,1),nrow=4,ncol=3))
dataf <- dataf %>% mutate(matrix(rnorm(8,0,1),nrow=4,ncol=2) %>% as.data.frame())
dataf
dataf <- as.tibble( matrix(rnorm(12,0,1),nrow=4,ncol=3))
dataf
dataf <- dataf %>% mutate(matrix(rnorm(8,0,1),nrow=4,ncol=2) %>% as.data.frame())
dataf
dataf <- dataf %>% mutate(list("a","b")=matrix(rnorm(8,0,1),nrow=4,ncol=2) %>% as.data.frame())
dataf <- dataf %>% mutate(a=matrix(rnorm(8,0,1),nrow=4,ncol=2) %>% as.data.frame())
dataf
raw_data_0 = read_xcsv("c:/Users/44751/Desktop/Data/eqq.csv")
source("c:/Users/44751/Desktop/modelling lib/lib.R")
raw_data_0 = read_xcsv("c:/Users/44751/Desktop/Data/eqq.csv")
raw_data = raw_data_0[1:(nrow(raw_data_0) - 50), ]
raw_data_1 = raw_data_0[(nrow(raw_data_0) - 49):nrow(raw_data_0), ]
dv = "Open_eqqq"
ivs = colnames(raw_data)[grepl(pattern = "Open", x = colnames(raw_data))]
ivs = ivs[!(ivs %in% c(dv))]
ivs = ivs[!(ivs %in% c(dv, "Open_TSLA"))]
id_var = "Date"
meta_data = tibble(variables = c(dv, ivs),
meta = rep("STA", 7))
model_table = build_model_table(ivs = ivs)
## WHY DOES THIS WORK WITH 2 messages...
model = run_model(
dv = dv,
ivs = ivs,
data = raw_data,
meta_data = meta_data
)
## ...AND THIS WITH 3 messages???
model = run_model(
dv = dv,
model_table = model_table,
data = raw_data,
meta_data = meta_data
)
raw_data = read_xcsv("c:/Users/44751/Desktop/Data/eqq.csv")
View(raw_data)
raw_data = read_xcsv("c:/Users/44751/Desktop/Data/eqq.csv")
raw_data = read_xcsv("c:/Users/44751/Desktop/Data/eqq.csv")
dv = "Open_eqqq"
ivs = colnames(raw_data)[grepl(pattern = "Open", x = colnames(raw_data))]
ivs = ivs[!(ivs %in% c(dv))]
ivs = ivs[!(ivs %in% c(dv, "Open_TSLA"))]
id_var = "Date"
meta_data = tibble(variables = c(dv, ivs),
meta = rep("STA", 7))
model_table = build_model_table(ivs = ivs)
## WHY DOES THIS WORK WITH 2 messages...
model = run_model(
dv = dv,
ivs = ivs,
data = raw_data,
meta_data = meta_data
)
## ...AND THIS WITH 3 messages???
model = run_model(
dv = dv,
model_table = model_table,
data = raw_data,
meta_data = meta_data
)
d = decomping(model = model, raw_data = raw_data)
decomp_chart(decomp_list = d)
fit_chart(decomp_list = d)
dataf <- as_tibble( matrix(rnorm(12,0,1),nrow=4,ncol=3))
dataf <- dataf %>% mutate(A = I(matrix(rnorm(8,0,1),nrow=4,ncol=2)))
dataf %>% select(A)
?I()
dataf <- as_tibble( matrix(rnorm(12,0,1),nrow=4,ncol=3))
dataf <- dataf %>% mutate(A = I(matrix(rnorm(8,0,1),nrow=4,ncol=2)))
dataf %>% select(A)
x = dataf %>% select(A)
x
I(x)
model
summary(model0
)
summary(model)
ivs = colnames(raw_data)[grepl(pattern = "Open", x = colnames(raw_data))]
ivs = ivs[!(ivs %in% c(dv))]
# ivs = ivs[!(ivs %in% c(dv, "Open_TSLA"))]
id_var = "Date"
meta_data = tibble(variables = c(dv, ivs),
meta = rep("STA", 7))
model_table = build_model_table(ivs = ivs)
## WHY DOES THIS WORK WITH 2 messages...
model = run_model(
dv = dv,
ivs = ivs,
data = raw_data,
meta_data = meta_data
)
## ...AND THIS WITH 3 messages???
model = run_model(
dv = dv,
model_table = model_table,
data = raw_data,
meta_data = meta_data
)
model
summary(model)
d = decomping(model = model, raw_data = raw_data)
decomp_chart(decomp_list = d)
fit_chart(decomp_list = d)
shiny::runApp('C:/Users/44751/Desktop/shiny_chess')
library(rchess)
rchess::Chess
ch = rchess::Chess()
ch = rchess::Chess
ch
ch$active
ch$set()
ch$set(
)
ch$set
ch$new()
chh = ch$new()
ch$set
chh$move("e4")
chh$plot()
ch = rchess::Chess$new()
ch = rchess::Chess$new()
ch$fen()
ch$move("e4")
ch$fen()
ch = rchess::Chess$new()
ch$move("e4")
ch$move("c6")
ch$fen()
ch$move("c4")
ch$fen()
runApp('C:/Users/44751/Desktop/shiny_chess')
## black even
## white even
ch$fen
## black even
## white even
ch$fen()
p = ch$plot
p
p()
runApp('C:/Users/44751/Desktop/shiny_chess')
runApp('C:/Users/44751/Desktop/shiny_chess')
runApp('C:/Users/44751/Desktop/shiny_chess')
runApp('C:/Users/44751/Desktop/chess_2/shiny_chess')
shiny::runApp('C:/Users/44751/Desktop/chess_2/shiny_chess')
runApp('C:/Users/44751/Desktop/chess_2/shiny_chess')
install.packages("chessboardjs")
shiny::runApp('C:/Users/44751/Desktop/chess_2/shiny_chess')
runApp('C:/Users/44751/Desktop/chess_2/shiny_chess')
library(rchess)
runApp('C:/Users/44751/Desktop/chess_2/shiny_chess')
ch = rchess::Chess()$new()
ch = rchess::Chess$new()
ch
moves = "e4 ; e5"
moves = strsplit(moves," ; ")[[1]]
for(i in 1:length(moves)){
ch$move(moves[i])
}
ch
runApp('C:/Users/44751/Desktop/chess_2/shiny_chess')
runApp('C:/Users/44751/Desktop/chess_2/shiny_chess')
runApp('C:/Users/44751/Desktop/chess_2/shiny_chess')
runApp('C:/Users/44751/Desktop/chess_2/shiny_chess')
runApp('C:/Users/44751/Desktop/chess_2/shiny_chess')
shiny::runApp('C:/Users/44751/Desktop/chess_2/shiny_chess')
runApp('C:/Users/44751/Desktop/chess_2/shiny_chess')
rsconnect::deployApp(appDir = "c:/Users/44751/Desktop/chess_2/shiny_chess")
runApp('C:/Users/44751/Desktop/chess_2/shiny_chess')
runApp('C:/Users/44751/Desktop/chess_2/shiny_chess')
